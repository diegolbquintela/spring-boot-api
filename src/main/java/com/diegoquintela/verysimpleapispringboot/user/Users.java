package com.diegoquintela.verysimpleapispringboot.user;

import javax.persistence.*;
import java.time.LocalDate;
import java.time.Period;


@Entity//hibernate - mapping user to the db
@Table//db - mapping user to the db
public class Users {

    // id generator for db
    @Id
    @SequenceGenerator(
            name = "user_sequence",
            sequenceName = "user_sequence",
            allocationSize = 1
    )
    @GeneratedValue(
            generator = "user_sequence",
            strategy = GenerationType.SEQUENCE
    )
    private Long id;

    private String name;

    private LocalDate dob; //date of birth

    private String email;

    @Transient //removes the necessity of age being a table, it will now be calculated (must remove from constructor)
    private Integer age;

    //no arg constructor
    public Users() {
    }

    //constructor without id, which will be generated by the db
    public Users(String name, LocalDate dob, String email) {
        this.name = name;
        this.dob = dob;
        this.email = email;
    }

    //constructor
    public Users(Long id, String name, LocalDate dob, String email) {
        this.id = id;
        this.name = name;
        this.dob = dob;
        this.email = email;

    }

    @Override
    public String toString() {
        return "User{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", dob=" + dob +
                ", email='" + email + '\'' +
                ", age=" + age +
                '}';
    }

    // getters and setters
    public void setId(Long id) {
        this.id = id;
    }

    public void setName(String name) {
        this.name = name;
    }

    public void setDob(LocalDate dob) {
        this.dob = dob;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public void setAge(Integer age) {
        this.age = age;
    }

    public Long getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public LocalDate getDob() {
        return dob;
    }

    public String getEmail() {
        return email;
    }

    // calculate Age
    public Integer getAge() {
        return Period.between(this.dob, LocalDate.now()).getYears();
    }


}
